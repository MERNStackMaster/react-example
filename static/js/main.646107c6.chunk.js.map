{"version":3,"sources":["components/Header/images/ireland.jpg","components/Header/index.js","components/Main/index.js","components/Footer.js","pages/Form/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Ireland","alt","Main","handleGetComments","fetch","then","res","json","data","console","log","setState","comments","catch","err","handleDelComments","state","onClick","this","map","comment","key","id","name","body","href","email","target","rel","React","Component","Footer","styles","footer","backgroundColor","p","color","style","Form","handleInputChange","e","value","handleSubmit","preventDefault","age","alert","onChange","type","App","to","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.646107c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ireland.87956ea6.jpg\";","import React from 'react';\nimport Ireland from './images/ireland.jpg';\nimport './styles.css';\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<img className=\"logo\" src={Ireland} alt=\"Cliffs of Moher\" />\n\t\t\t<h1>Welcome to my cool React site!</h1>\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\n\nclass Main extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tcomments: []\n\t\t};\n\t}\n\n\thandleGetComments = () => {\n\t\tfetch('https://jsonplaceholder.typicode.com/comments')\n\t\t\t.then(res => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcomments: data\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\thandleDelComments = () => {\n\t\tthis.setState({\n\t\t\tcomments: []\n\t\t}); \n\t};\n\n\tcomponentDidMount() { // very similar to document.ready() eg. When the component loads and is ready\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<button onClick={this.handleGetComments}>Get Comments</button>\n\t\t\t\t<button onClick={this.handleDelComments}>Delete Comments</button>\n\n\t\t\t\t{this.state.comments.map((comment) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={comment.id}>\n\t\t\t\t\t\t\t<h2>{comment.name}</h2>\n\t\t\t\t\t\t\t<p>{comment.body}</p>\n\t\t\t\t\t\t\t<a href={'mailto:' + comment.email} target=\"_blank\" rel=\"noopener noreferrer\">{comment.email}</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n\tconst styles = {\n\t\tfooter: {\n\t\t\tbackgroundColor: 'red'\n\t\t},\n\t\tp: {\n\t\t\tcolor: 'green'\n\t\t}\n\t};\n\n\treturn (\n\t\t<footer style={styles.footer}>\n\t\t\t<h2>This is my contact information.</h2>\n\t\t\t<address>\n\t\t\t\t<p style={styles.p}>1234 Main St., California</p>    \n\t\t\t</address>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;","import React from 'react';\n\nimport './styles.css';\n\nclass Form extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tage: ''\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tage: ''\n\t\t});\n\n\t\talert('Form submitted, and sent to DB.');\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t<form>\n\t\t\t\t<label>Name:\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<label>Age:\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\tvalue={this.state.age}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<button onClick={this.handleSubmit}>Submit</button>\n\t\t\t</form>\n\n\t\t\t<div>\n\t\t\t\t{this.state.name && this.state.age ?\n\t\t\t\t<h1>Hello {this.state.name}, I hear you are {this.state.age} years old</h1> :\n\t\t\t\t<h1>I don't know you yet!</h1>}\n\t\t\t\t\n\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Form;","import React from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport Form from './pages/Form';\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Home</Link> \n        <Link to=\"/header\">Header</Link>\n        <Link to=\"/main\">Main</Link>\n        <Link to=\"/footer\">Footer</Link>\n        <Link to=\"/form\">Form</Link>\n\t\t\t</nav>\n\n      <Switch>\n        <Route exact path=\"/\" render={() => ''} />\n        <Route exact path=\"/header\" component={Header} />\n        <Route exact path=\"/main\" component={Main} />\n        <Route exact path=\"/footer\" component={Footer} />\n        <Route exact path=\"/form\" component={Form} />\n        <Route path=\"*\" render={() => {\n          return <h1>404 Error!</h1>\n        }} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n// functional components => stateless components\n// class components => stateful components","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}